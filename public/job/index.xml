<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Open Positions | Benoit Combemale</title>
    <link>https://people.irisa.fr/Benoit.Combemale/job/</link>
      <atom:link href="https://people.irisa.fr/Benoit.Combemale/job/index.xml" rel="self" type="application/rss+xml" />
    <description>Open Positions</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Benoit Combemale © 2021</copyright><lastBuildDate>Sun, 01 Jan 2017 00:00:00 +0100</lastBuildDate>
    <image>
      <url>https://people.irisa.fr/Benoit.Combemale/images/icon_hube7fc2a0f48f358a265c208b4572e7f9_36583_512x512_fill_lanczos_center_2.png</url>
      <title>Open Positions</title>
      <link>https://people.irisa.fr/Benoit.Combemale/job/</link>
    </image>
    
    <item>
      <title>Internship: data-centric software engineering.</title>
      <link>https://people.irisa.fr/Benoit.Combemale/job/msc-moda/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0200</pubDate>
      <guid>https://people.irisa.fr/Benoit.Combemale/job/msc-moda/</guid>
      <description>&lt;h2 id=&#34;context&#34;&gt;Context&lt;/h2&gt;
&lt;p&gt;A broad spectrum of application domains are increasingly making use of heterogeneous and large volumes of data with varying degrees of humans in the loop. The recent success of Artificial Intelligence (AI) and, in particular, Machine Learning (ML) further amplifies the relevance of data in the development, maintenance, evolution, and execution management of systems. While system development makes use of both models and data, it differs in the types and uses of models and data, and the degree and role of humans in the loop.&lt;/p&gt;
&lt;p&gt;To capture these differences, we recently defined the MODA framework [1]. MODA supports the system life-cycle of socio-technical systems, and is intended to handle a broad range of stakeholders and community groups. The framework provides a vision for how to explicitly integrate the three roles played by models – prescriptive, predictive, and descriptive [2,3] – as well as their respective data sources and highlights related actions to integrate them.&lt;/p&gt;
&lt;h2 id=&#34;description-of-the-work&#34;&gt;Description of the work&lt;/h2&gt;
&lt;p&gt;The main objective of this internship is to document and analyze the various practices (methods, processes, appraoches, and frameworks) in software engineering using the newly defined MODA framework. For such a purpose, the candidate will perform a review of the litterature about the modern software development practices, formalize them using the MODA framework, and propose a classification according to a set of criteria to be defined.&lt;/p&gt;
&lt;h2 id=&#34;environment&#34;&gt;Environment&lt;/h2&gt;
&lt;p&gt;The candidate will work at Inria in the DiverSE team. Inria is the French national institute for research in computer science. There are 8 Inria research centres located throughout France, hosting more than 200 research teams. The DiverSE team is located in Rennes. DiverSE’s research is in the area of software engineering. The team is actively involved in European, French and industrial projects and is composed of 9 faculty members, 20 PhD students, 2 post-docs and 4 engineers. The candidate will work in the context of a collaboration with McGill University (Canada). The main supervisor will be Prof. Benoit Combemale (University of Rennes 1, DiverSE team).&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Benoit Combemale, Jörg Kienzle, Gunter Mussbacher, Hyacinth Ali, Daniel Amyot, et al.. A Hitchhiker&amp;rsquo;s Guide to Model-Driven Engineering for Data-Centric Systems. IEEE Software, Institute of Electrical and Electronics Engineers, 2020, pp.1-9. Cf. &lt;a href=&#34;https://hal.inria.fr/hal-02612087&#34;&gt;https://hal.inria.fr/hal-02612087&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;T. Kühne, “Unifying explanatory and constructive modeling: towards removing the gulf between ontologies and conceptual models,” in MODELS 2016. ACM, 2016, pp. 95–102.&lt;/li&gt;
&lt;li&gt;E. A. Lee, “Modeling in engineering and science,” Commun. ACM, vol. 62, no. 1, pp. 35–36, Dec. 2018.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Internship: Towards Distributed and Scalable IDE.</title>
      <link>https://people.irisa.fr/Benoit.Combemale/job/msc-mep/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0200</pubDate>
      <guid>https://people.irisa.fr/Benoit.Combemale/job/msc-mep/</guid>
      <description>&lt;h2 id=&#34;context-and-objectives&#34;&gt;Context and objectives&lt;/h2&gt;
&lt;p&gt;Integrated Development Environments (IDEs) are indispensable companions to programming languages. They are increasingly turning towards Web-based infrastructure. The rise of protocols such as the Language Server Protocol (LSP) that standardize the separation between a language-agnostic IDE, and a language server that provides all language services (e.g., auto completion, compiler&amp;hellip;) has allowed the emergence of high quality generic Web components to build the IDE part that runs in the browser. Protocols allow language servers to be reused accross different IDEs, and web-based interfaces facilitate access to the IDE.&lt;/p&gt;
&lt;p&gt;Beyond these first benefits, web-based IDEs also open up new perspectives in terms of collaborative environments, both for general-purpose languages and domain-specific languages. However, this requires all language services to be well identified and to scale according to their use.&lt;/p&gt;
&lt;p&gt;In contrast with the current approaches that provide IDEs in the form of a monolithic client-server architecture, we propose to investigate the modularization of the various languages services, and the definition of a specific protocol between them to support their individual deployment, and possible dynamic reconfiguration according to their use.&lt;/p&gt;
&lt;h2 id=&#34;description-of-the-work&#34;&gt;Description of the work&lt;/h2&gt;
&lt;p&gt;After a review of the literature and the state of practices regarding the recently introduced protocols, the student(s) will:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;propose a systematic approach to modularize the various language services, and establish a protocol between them to suport their communication. In particular, the protocol will have to manage the shared ressources, e.g., the programs available in the workspace.&lt;/li&gt;
&lt;li&gt;a generative approach to automate the deployment or dynamic reconfiguration of the vraious services accross the available execution platform, and according to the defined protocol and current context.&lt;/li&gt;
&lt;li&gt;a predictive model to capture the environment and the runtime data of the various language services, and recommend the best configuration of the deployment according to the current context.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;environment&#34;&gt;Environment&lt;/h2&gt;
&lt;p&gt;The candidate will work at Inria in the DiverSE team. Inria is the French national institute for research in computer science. There are 8 Inria research centres located throughout France, hosting more than 200 research teams. The DiverSE team is located in Rennes. DiverSE’s research is in the area of software engineering. The team is actively involved in European, French and industrial projects and is composed of 9 faculty members, 20 PhD students, 2 post-docs and 4 engineers.
The candidate will work in the context of one of the main topic explored in the team, involving various professors and students, as well as a close partnership with CWI in Amsterdam. The main supervisors will be Prof. Benoit Combemale and Prof. Olivier Barais (University of Rennes 1, DiverSE team).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Internship: Towards Polyglot Code Refactoring</title>
      <link>https://people.irisa.fr/Benoit.Combemale/job/msc-microservicedsl/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0200</pubDate>
      <guid>https://people.irisa.fr/Benoit.Combemale/job/msc-microservicedsl/</guid>
      <description>&lt;h2 id=&#34;keywords&#34;&gt;keywords&lt;/h2&gt;
&lt;p&gt;Programming Language, Software Language Engineering, Domain-Specific Language, Polyglot Development, Integrated Development Environment, Refactoring, Co-evolution, Code Repair.&lt;/p&gt;
&lt;h2 id=&#34;context-and-challenges&#34;&gt;Context and Challenges&lt;/h2&gt;
&lt;p&gt;The evolution of software engineering discipline has seen the emergence of a multitude of programming languages (PL), each dedicated to a particular application concern. Nowadays, complex software development often involves more than a single language for the implementation, referred to as polyglot development . Indeed, we observe more and more software projects that are implemented with various PLs, in particular, to combine their strengths and counterbalance their weaknesses. For example, polyglot development is relevant and popular in development of web applications, video games, DSLs, etc. Emerging solutions do exist that support polyglot programming relying on Intermediate Representation (IR), such as the GrallVM/Truffle, PolyNote notebook, LLVM, or WebAssembly.&lt;/p&gt;
&lt;p&gt;While polyglot development allows developers to choose the appropriate language to implement a given concern, it also leads to a set of loosely coupled (i.e., with data sharing through variables and functions calls) and heterogeneous programs difficult to globally reason over them. Indeed, the existing frameworks do not reify the relationships between them and poorly support the developers on the global impact (i.e., in other programs) of any code change.&lt;/p&gt;
&lt;h2 id=&#34;objectives&#34;&gt;Objectives&lt;/h2&gt;
&lt;p&gt;The main objectives of this internship are the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;state of the art on semantic-preserving refactorings, co-evolution and code repair, experimented on specific languages ;&lt;/li&gt;
&lt;li&gt;complement the catalog of semantic-preserving refactorings to cover polyglot development scenarios ;&lt;/li&gt;
&lt;li&gt;Propose a unifying development framework to convey any code change over the overall heterogeneous programs, and analyse the global consistency ;&lt;/li&gt;
&lt;li&gt;develop a prototype that automates the application of polyglot semantic-preserving refactorings in reaction to code changes to ensure the global consistency of the overall software system.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This internship will be done in the context of international collaboration between DiverSE/IRISA and CWI through the international ALE team, and with our contact in ORACLE (GrallVM/Truffle).&lt;/p&gt;
&lt;h2 id=&#34;required-and-appreciated-skills&#34;&gt;Required and appreciated skills&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;strong skills in programming, more specifically, fluent in object-oriented programming ;&lt;/li&gt;
&lt;li&gt;passionate about programming languages, language theory, language design &amp;amp; implementation and integrated development environment ;&lt;/li&gt;
&lt;li&gt;autonomy, and excellent English speaking and writing skills.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;environment&#34;&gt;Environment&lt;/h2&gt;
&lt;p&gt;The candidate will work in the DiverSE team, common to CNRS (IRISA) and Inria. The DiverSE team is located in Rennes, France. DiverSE’s research is in the field of software engineering. The team is actively involved in European, French and industrial projects and is composed of 9 professors/researchers, 20 PhD students, 4 post-docs and 3 engineers. The main supervisors of the thesis will be Benoit Combemale (&lt;a href=&#34;mailto:benoit.combemale@irisa.fr&#34;&gt;benoit.combemale@irisa.fr&lt;/a&gt;) and Djamel Khelladi (&lt;a href=&#34;mailto:djamel-eddine.khelladi@irisa.fr&#34;&gt;djamel-eddine.khelladi@irisa.fr&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fabio Niephaus et al.. “Example-Based Live Programming for Everyone: Building Language-agnostic Tools for Live Programming with LSP and GraalVM”, Onward! 2020&lt;/li&gt;
&lt;li&gt;McDirmid, Sean. “Usable live programming”, Onwards! 2013&lt;/li&gt;
&lt;li&gt;Santolucito, Mark, William T. Hallahan, and Ruzica Piskac. “Live programming by example.” In Extended Abstracts of the CHI 2019&lt;/li&gt;
&lt;li&gt;Hidehiko Masuhara, Shusuke Takahashi, Yusuke Izawa, Youyou Cong. “Toward a Multi-Language and Multi-Environment Framework for Live Programming”, LIVE 2020.&lt;/li&gt;
&lt;li&gt;Würthinger, Thomas, et al. “One VM to rule them all”, Onward! 2013&lt;/li&gt;
&lt;li&gt;Niephaus, Fabio, Tim Felgentreff, and Robert Hirschfeld. “GraalSqueak: toward a smalltalk-based tooling platform for polyglot programming” In Proc. of MPLR 2019&lt;/li&gt;
&lt;li&gt;Niephaus, Fabio, Tim Felgentreff, and Robert Hirschfeld. “Towards polyglot adapters for the graalvm” In Proc. of Programming 2019.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>PhD Thesis: DevOps for Industry 5.0.</title>
      <link>https://people.irisa.fr/Benoit.Combemale/job/phd-devops4industry5.0/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0200</pubDate>
      <guid>https://people.irisa.fr/Benoit.Combemale/job/phd-devops4industry5.0/</guid>
      <description>&lt;h2 id=&#34;context&#34;&gt;Context&lt;/h2&gt;
&lt;p&gt;The design of complex cyber-physical systems (e.g., industry 5.0) involves various heterogeneous stakeholders (e.g., software engineers, computer and system engineers, mechanical engineers, physicists), all bringing their own expertise to the system, and for this using their own tools and methods. The disruptive design of new, complex systems requires a high degree of flexibility in the communication between these many stakeholders, often limited by the siloed structure of the organization itself (cf. Conway&amp;rsquo;s law). To overcome this constraint, modern engineering environments aims to: better manage the necessary exchanges between the different stakeholders; provide a unique place for information sharing; ensure the consistency of the many points of view. Beyond these classical goals,  they also aim at handling value streams, which are characterized by partial orders of activities that require either a social (i.e., among the stakeholders) or a technical (i.e., among the artefacts) coordination.  Providing a unifying framework for managing these various activities will ​allow breakthrough innovations and the search for global optimum.&lt;/p&gt;
&lt;p&gt;The first generations of these engineering environments made it possible to understand the specificities of each stakeholders by allowing them to use their own formalisms (aka. domain-specific modeling languages), while maintaining the overall consistency and the ability to think globally about the system being designed through an holistic digital representation. These environments are sometimes also backed by a methodology to guide the process of creating different points of view. However, these methodologies remain independent of the value stream ​​passing between the many stakeholders involved in the process. This limitation affects the ability to establish a collective intelligence where all individuals collaborate globally and in an agile manner. For this, a correctly identified, transparent value stream, equipped with suitable and partially automated tools to facilitate its handling is essential to promote the creativity necessary in the design phase, while enhancing the involvement of everyone.&lt;/p&gt;
&lt;p&gt;To overcome this limit to collective intelligence when designing complex systems, this thesis aims to improve the usability of development cycles, involving both systems engineers and all those involved in specialty engineering. Usability will be approached through three complementary aspects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Efficiency, which aims to achieve a result with less effort,&lt;/li&gt;
&lt;li&gt;Affordance, in particular perceptible affordance, which is the ability of an object to suggest its uses,&lt;/li&gt;
&lt;li&gt;Satisfaction, which is the comfort of the user in using the engineering environment and performing tasks.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;objective&#34;&gt;Objective&lt;/h2&gt;
&lt;p&gt;To improve the usability (in its three facets) of the development of complex systems, we propose to leverage on modern software engineering practices such as DevOps and web-based collaborative platforms (e.g., forges). DevOps aims, among other things, to reduce the distance between the different stakeholders (esp., developpers and IT) and to improve interactions between them thanks to an adapted tool chain. The execution of this tool chain aims to produce an overall result as quickly as possible (software, data, etc.). The search for this overall result brings together the various stakeholders involved, possibly coming from different fields, around a common final objective. In the context of systems engineering, DevOps would take advantage of the established value stream to automate certain activities as much as possible, and ensure continuous improvement on the system being designed. Forges (e.g., Gitlab, GitHub) are web-based collaborative platforms that bring all stakeholders in a virtual common place to realize the value stream in software development.&lt;/p&gt;
&lt;p&gt;While such practices had a deep impact in the software engineering community in the last decade, there are many scientific and technical obstacles to apply them more widely to all the stakeholders involved in the design of complex systems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How to establish a main chain of DevOps tools for systems engineering seeking global optima through socio-technical coordination of the different stakeholders involved?&lt;/li&gt;
&lt;li&gt;How on a local chain of DevOps tools can a stakeholder rely to study local optima without affecting the main chain?&lt;/li&gt;
&lt;li&gt;How, in a DevOps context, can an evolution carried out by a stakeholder on his data propagate to other impacted data managed by other stakeholders?&lt;/li&gt;
&lt;li&gt;How to notify a stakeholder in case of detection of an impact on his data so that he can benefit easily and quickly from these changes?&lt;/li&gt;
&lt;li&gt;How a multi-disciplinary pull request can be implemented to support the required socio-technical coordination?&lt;/li&gt;
&lt;li&gt;How can each stakeholder, with their specific point of view, visualize, validate and analyze local and global optima?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The work will be applied and evaluated in the field of industry 5.0, which not only considers producing goods and services for profit, but also making it sustainable, human-centric and resilient. All these concerns have to be considered by design, and involve various heterogeneous stakeholders and artefacts to be intelligently coordinated.&lt;/p&gt;
&lt;h2 id=&#34;environment&#34;&gt;Environment&lt;/h2&gt;
&lt;p&gt;Le candidat travaillera dans l&amp;rsquo;équipe DiverSE, commune au CNRS (IRISA) et à Inria. L&amp;rsquo;équipe DiverSE est située à Rennes. Les recherches de l&amp;rsquo;équipe DiverSE se situent dans le domaine du génie logiciel. L&amp;rsquo;équipe est activement impliquée dans des projets européens, français et industriels et est composée de 9 enseignants-chercheurs, 20 doctorants, 4 post-docs et 3 ingénieurs. Les tavaux de thèse seront dirigés par 
&lt;a href=&#34;https://people.irisa.fr/Arnaud.Blouin/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Arnaud Blouin&lt;/a&gt; (INSA, DiverSE team), 
&lt;a href=&#34;https://people.irisa.fr/Benoit.Combemale&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Benoit Combemale&lt;/a&gt; (University of Rennes 1, DiverSE team) et 
&lt;a href=&#34;http://people.irisa.fr/Djamel-Eddine.Khelladi/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Djamel Eddine Khelladi&lt;/a&gt; (CNRS, DiverSE team). Le candidat s&amp;rsquo;inscrira à l&amp;rsquo;école doctorale en informatique de l&amp;rsquo;Université de Rennes 1.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PhD Thesis: DevOps pour l&#39;ingénierie des systèmes complexes.</title>
      <link>https://people.irisa.fr/Benoit.Combemale/job/phd-devops4syseng/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0200</pubDate>
      <guid>https://people.irisa.fr/Benoit.Combemale/job/phd-devops4syseng/</guid>
      <description>&lt;h2 id=&#34;context&#34;&gt;Context&lt;/h2&gt;
&lt;p&gt;La conception de systèmes complexes requiert la participation de nombreux acteurs apportant chacun leur propre expertise sur le système, et utilisant pour cela leur propre outils et méthodes. La conception en rupture de nouveaux systèmes complexes requiert une forte flexibilité dans la communication entre ces nombreux acteurs, souvent limitée par la structure en silos de l&amp;rsquo;organisation elle-même. Pour s&amp;rsquo;affranchir de cette contrainte, la mise en place d&amp;rsquo;environnements d&amp;rsquo;ingénierie vise à : mieux gérer les échanges nécessaires entre les différents acteurs ; offrir un lieu unique pour le partage de l&amp;rsquo;information ; assurer la cohérence des nombreux points de vues ; permettre un flux de valeurs permettant une innovation en rupture et la recherche d&amp;rsquo;optimum globaux.&lt;/p&gt;
&lt;p&gt;Les premières générations de ces environnements d&amp;rsquo;ingénierie ont permis d&amp;rsquo;appréhender les spécificités de chaque acteurs en leur permettant d&amp;rsquo;utiliser leurs propres formalismes, tout en gardant une cohérence globale et la capacité de raisonner globalement sur le système en cours de conception. Ces environnements sont parfois également adossés à une méthodologie permettant de guider le processus de création des différents points de vue. Néanmoins, ces méthodologies restent indépendantes du flux de valeurs transitant entre les nombreux acteurs intervenant dans le processus. Cette limitation affecte la capacité à établir une intelligence collective où l’ensemble des individus collaborent globalement et de manière agile. Pour cela, un flux de valeurs correctement identifié, transparent, doté d&amp;rsquo;un outillage adapté et partiellement automatisé pour faciliter sa manipulation est indispensable pour favoriser la créativité nécessaire en phase de conception, tout en valorisant l&amp;rsquo;implication de chacun.&lt;/p&gt;
&lt;h2 id=&#34;objective&#34;&gt;Objective&lt;/h2&gt;
&lt;p&gt;Pour pallier cette limite à l&amp;rsquo;intelligence collective lors de la conception de systèmes complexes, cette thèse vise à améliorer l&amp;rsquo;utilisabilité des cycles de développement, impliquant tant les ingénieurs systèmes que l&amp;rsquo;ensemble des acteurs des ingénieries de spécialité. L&amp;rsquo;utilisabilité sera abordée au travers de trois aspects complémentaires :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;L&amp;rsquo;efficience, qui vise à atteindre un résultat à un moindre effort.&lt;/li&gt;
&lt;li&gt;L&amp;rsquo;affordance, en particulier l&amp;rsquo;affordance perceptible, qui est la capacité d&amp;rsquo;un objet a suggérer ses utilisations.&lt;/li&gt;
&lt;li&gt;La satisfaction, qui relève du confort de l&amp;rsquo;utilisateur à utiliser l’environnement d&amp;rsquo;ingénierie et à accomplir des tâches.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pour améliorer l&amp;rsquo;utilisabilité (sous ses trois facettes) du développement de systèmes complexes, nous proposons d&amp;rsquo;explorer l&amp;rsquo;application de techniques d&amp;rsquo;ingénierie logiciel, et en particulier les pratiques DevOps.
Le DevOps vise, entre autres, à réduire la distance entre les differents acteurs et à améliorer les interactions entre ces derniers grâce à une chaîne d&amp;rsquo;outils adaptée. L&amp;rsquo;exécution de cette chaîne d&amp;rsquo;outils vise à produire dans les délais les plus courts possible un résultat global (logiciel, données, etc.). La recherche de ce résultat global fédère les différents acteurs impliqués, venant possiblement de différents domaines, autour d&amp;rsquo;un objectif final commun.
Dans le contexte de l’ingénierie des systèmes, le DevOps permettrait de tirer parti du flux de valeurs établi pour automatiser au maximum certaines activités, et assurer une amélioration continue sur le système en cours de conception.
Les verrous scientifiques et techniques sont nombreux :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Comment établir une chaîne principale d&amp;rsquo;outils DevOps pour l&amp;rsquo;ingénierie système recherchant des optimum globaux en permettant une coordination socio-technique entre les différents acteurs impliqués ?&lt;/li&gt;
&lt;li&gt;Comment sur une chaîne locale d&amp;rsquo;outils DevOps un acteur peut-il s&amp;rsquo;appuyer pour étudier des optimum locaux sans affecter la chaîne principale ?&lt;/li&gt;
&lt;li&gt;Comment dans un contexte DevOps propager une évolution réalisée par un acteur sur ses données, aux autres données impactées gérées par d&amp;rsquo;autres acteurs ?&lt;/li&gt;
&lt;li&gt;Comment notifier un acteur en cas de detection d&amp;rsquo;un impact sur ses données pour qu&amp;rsquo;il puisse tirer profit facilement et rapidement de ces changements ?&lt;/li&gt;
&lt;li&gt;Comment chaque acteur, avec leur point de vue spécifique, peut-il visualiser, valider et analyser des optimum locaux et globaux ?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;description-of-the-work&#34;&gt;Description of the work&lt;/h2&gt;
&lt;p&gt;Le doctorant ou la doctorante aura la charge de travailler sur les verrous mentionés ci-dessus. En particulier, si le DevOps est largement utilisé pour le développement de logiciels, les chaînes d&amp;rsquo;outils pour le logiciel ne sont pas adaptées à l&amp;rsquo;ingénierie système en raison de paradigmes différents (par exemple, code vs modèles hétérogènes, exécution vs simulation, informaticiens vs physiciens, &amp;hellip;). Il ou elle devra adapter chacune des étapes de la boucle DevOps (en particulier les étapes : créer, vérifier et surveiller) pour l&amp;rsquo;ingénierie système.
Les étapes &amp;lsquo;créer&amp;rsquo; et &amp;lsquo;vérifier&amp;rsquo; impliquent qu&amp;rsquo;un acteur concerné puisse rapidement oberver les résultats lors de changement dans ses données. Sur ce point, nous pouvons tirer profit des connaissances acquises sur le domaine du &amp;ldquo;live programming&amp;rdquo; pour aller vers du &amp;ldquo;live modelling&amp;rdquo;. Le &amp;ldquo;live programming&amp;rdquo; permet de modifier un programme en cours d&amp;rsquo;exécution en propageant les modifications apportées au code source du programme à son état d&amp;rsquo;exécution. Cela permet de combler le fossé entre l&amp;rsquo;écriture et l&amp;rsquo;exécution d&amp;rsquo;un programme : les effets d&amp;rsquo;un changement sur le système en cours d&amp;rsquo;exécution sont immédiatement visibles et le développeur peut prendre des mesures immédiates. Dans notre contexte, cela permettrait d&amp;rsquo;améliorer l&amp;rsquo;efficience et la satisfaction en réduisant le temps d&amp;rsquo;évaluation de changements apportés par un acteur sur des données (ie obtenir ses nouveaux optimum locaux), ainsi que la propagation et l&amp;rsquo;impact de changements sur les optimun locaux des autres acteurs et sur les optimum globaux du système.
Cela implique une amélioration de l&amp;rsquo;interactivité des environnements de développements des acteurs et une identification des résultats &amp;lsquo;live&amp;rsquo; que chaque acteur se doit d&amp;rsquo;attendre. La chaîne d&amp;rsquo;outils DevOps pour l&amp;rsquo;ingénierie système permettrait en arrière plan de &amp;lsquo;créer&amp;rsquo; des optimum locaux et globaux, et de les &amp;lsquo;vérifier&amp;rsquo; pour visualisation ou notifications auprès des différents acteurs concernés.
Afin d&amp;rsquo;améliorer l&amp;rsquo;affordance, le doctorant ou la doctorante pourra également travailler sur l&amp;rsquo;assistance et la recommandations de tâches visant à simplifier le travail des différents acteurs. Cette assistance pourra se faire grâce à la surveillance de l&amp;rsquo;étape DevOps (l&amp;rsquo;étape &amp;lsquo;surveiller&amp;rsquo;).&lt;/p&gt;
&lt;h2 id=&#34;environment&#34;&gt;Environment&lt;/h2&gt;
&lt;p&gt;Le candidat travaillera dans l&amp;rsquo;équipe DiverSE, commune au CNRS (IRISA) et à Inria. L&amp;rsquo;équipe DiverSE est située à Rennes. Les recherches de l&amp;rsquo;équipe DiverSE se situent dans le domaine du génie logiciel. L&amp;rsquo;équipe est activement impliquée dans des projets européens, français et industriels et est composée de 9 enseignants-chercheurs, 20 doctorants, 4 post-docs et 3 ingénieurs. Les tavaux de thèse seront dirigés par 
&lt;a href=&#34;https://people.irisa.fr/Arnaud.Blouin/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Arnaud Blouin&lt;/a&gt; (INSA, DiverSE team), 
&lt;a href=&#34;https://people.irisa.fr/Benoit.Combemale&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Benoit Combemale&lt;/a&gt; (University of Rennes 1, DiverSE team) et 
&lt;a href=&#34;http://people.irisa.fr/Djamel-Eddine.Khelladi/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Djamel Eddine Khelladi&lt;/a&gt; (CNRS, DiverSE team). Le candidat s&amp;rsquo;inscrira à l&amp;rsquo;école doctorale en informatique de l&amp;rsquo;Université de Rennes 1.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PhD Thesis: IDE as Code</title>
      <link>https://people.irisa.fr/Benoit.Combemale/job/phd-idearchitecture/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0200</pubDate>
      <guid>https://people.irisa.fr/Benoit.Combemale/job/phd-idearchitecture/</guid>
      <description>&lt;h2 id=&#34;context&#34;&gt;Context&lt;/h2&gt;
&lt;p&gt;To cope with the ever-growing number of programming languages, manufacturers of Integrated Development Environments (IDE) have recently defined protocols as a way to use and share multiple language services (e.g., auto-completion, type checker, language runtime) in language-agnostic environments (i.e., the user interface provided by the IDE): the most notable are the Language Server Protocol (LSP) for textual editors, and the Debug Adapter Protocol (DAP) for debugging facilities.&lt;/p&gt;
&lt;p&gt;These protocols rely on a proper specification of the services that are commonly found in the tool support of general-purpose languages, and define a fixed set of capabilities to offer in the IDE.
However, new languages appear regularly offering unique constructs (e.g., Domain-Specific Languages), and supported by dedicated services to be offered as new capabilities in IDEs. This trend leads to the multiplication of new protocols, hard to combine and possibly incompatible (e.g., overlap, different technological stacks).&lt;/p&gt;
&lt;p&gt;Beyond the proposition of specific protocols, the goal of this PhD is to propose an original appraoch for being able to specify language protocols and to offer IDEs to be configured with such protocol specifications.&lt;/p&gt;
&lt;h2 id=&#34;objective&#34;&gt;Objective&lt;/h2&gt;
&lt;p&gt;This PhD focuses on the definition of the platform architecture to support multimodal and collaborative modeling and simulation. This will be achieved through an extensible, reconfigurable, scalable, and collaborative microservice architecture [1]. Each platform service (e.g., editing facilities, consistency checker, simulator, etc.) will be dynamically deployed as microservices [2], optimally distributed according to the available infrastructure (developer workstation, servers and cloud and the network linking them), the required Quality of Service (latency, resource consumption, etc.), and the expected scenario of use (activity, stakeholder, online/offline).&lt;/p&gt;
&lt;p&gt;This PhD will establish the envisioned service architecture. We will explore an architecture based on microservices, such that each platform service can be dynamically deployed, duplicated, updated and reconfigured. Hence, the service architecture will support the optimal and scalable deployment of the platform services according to the available infrastructure, the QoS contracts, and the expected scenario of use. One of the specificity of this work lies in the high heterogeneity of the available infrastructure, both in terms of platform services, computing and storage ressources, and network capacity. The other specificity is related to the Quality of Service contract which will includes mutliple dimension of software metrics such as performance, energy consumption, latency, reliability, precision of simulation and security.&lt;/p&gt;
&lt;p&gt;State of the art tools for deploying micro-services architectures (e.g., [3]) are limited in their ability to handle quality of service contract with multiple dimensions and are not well suited  when facing a very heterogeneous infrastructure. Therefore, they are not adequate for deploying and supporting the execution of a multimodal and collaborative modeling and simulation platform.&lt;/p&gt;
&lt;p&gt;IDEs went from directly supporting languages to protocols, and we envision in this PhD work the next step: IDE as code [4], where language protocols are created or inferred on demand and serve as support of an adaptation loop taking in charge of the (re)configuration of the IDE.&lt;/p&gt;
&lt;h2 id=&#34;description-of-the-work&#34;&gt;Description of the work&lt;/h2&gt;
&lt;p&gt;To establish the envision service architecture this PhD will have to overcome the following challenges :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Proposition of new langages to describe (i) the micro services and their interactions, (ii) the available infrastructure, (iii) the expected Quality of Services and (iv) the usage scenario.&lt;/li&gt;
&lt;li&gt;A smart runtime environment which will deploy, optimize and maintain the collaborative modeling and simulation platform according to the previous descriptions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The PhD work will be apply to CosApp, a systems engineering and simulation platform involving various general-purpose and domain-specific languages, all suported by specific services.&lt;/p&gt;
&lt;h2 id=&#34;environment&#34;&gt;Environment&lt;/h2&gt;
&lt;p&gt;The candidate will be involved in the DiverSE team, joint to the CNRS (IRISA) and Inria. The DiverSE team is located in Rennes. DiverSE’s research is in the area of software engineering. The team is actively involved in European, French and industrial projects and is composed of 9 faculty members, 20 PhD students, 4 post-docs and 3 engineers. The main advisors of the PhD thesis will be 
&lt;a href=&#34;https://people.irisa.fr/Benoit.Combemale&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prof. Benoit Combemale&lt;/a&gt; (University of Rennes 1, DiverSE team), 
&lt;a href=&#34;https://olivier.barais.fr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prof. Olivier Barais&lt;/a&gt; (University of Rennes 1, DiverSE team), and 
&lt;a href=&#34;https://sites.google.com/site/johannbourcier/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prof. Johann Bourcier&lt;/a&gt; (University of Rennes 1, DiverSE team). The candidate will register to the doctoral school in computer science of the University of Rennes 1.&lt;/p&gt;
&lt;h2 id=&#34;how-to-apply&#34;&gt;How to apply&lt;/h2&gt;
&lt;p&gt;Please send your application (PDF) as soon as possible. Screening of applications starts immediately and continues until the position is filled. Send a cover letter including names of at least two referees, CV, PDFs of publications (if any) to the main advisors.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Fabien Coulon, Alex Auvolat, Benoit Combemale, Yérom-David Bromberg, François Taïani, Olivier Barais, and Noël Plouzeau. 2020. Modular and distributed IDE. In Proceedings of the 13th ACM SIGPLAN International Conference on Software Language Engineering (SLE 2020). Association for Computing Machinery, New York, NY, USA, 270–282. DOI:https://doi.org/10.1145/3426425.3426947&lt;/li&gt;
&lt;li&gt;J. Thones. “Microservices”. In: IEEE Software 32.1 (2015), pp. 116–116. doi: 10.1109/MS.2015.11.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://netflix.github.io/conductor/&#34;&gt;https://netflix.github.io/conductor/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pierre Jeanjean, Benoit Combemale, Olivier Barais. From DSL Specification to Interactive Computer Programming Environment. SLE 2019 - 12th ACM SIGPLAN International Conference on Software Language Engineering, Oct 2019, Athènes, Greece. pp.167-178&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>PhD Thesis: Smart Modeling</title>
      <link>https://people.irisa.fr/Benoit.Combemale/job/phd-smartmodeling/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0200</pubDate>
      <guid>https://people.irisa.fr/Benoit.Combemale/job/phd-smartmodeling/</guid>
      <description>&lt;h2 id=&#34;context&#34;&gt;Context&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;Software is eating the world!&amp;rdquo; [1], with massive digitalization of entire business markets (e.g., travel/music/video/photo/book industry…) and the development of cyber-physical systems (CPS) which assist citizens and companies in their daily life and businesses (e.g., smart cities/farming/building, industry 4.0 and transportation systems). But, may the world drive software? Modern CPS require more than ever to integrate a proper understanding of the world in which they involve, in order to both identify the relevant digital innovations the systems may address, and to take informed and open decisions during their dynamic adaptations that act on the physical world. Since the modern CPSs drive our daily life and businesses, they play a political role that requires an understanding of the world far beyond the direct environment captured through the utilization of monitoring techniques and sensors. It also requires to care about the economic, social, and environmental context in which the CPS is involved, in order to take into account all the possible externalities on society raised by the digital innovations and the use of smart CPS. While software engineers are now well equipped for designing safe and deterministic solutions to well-defined problems, they currently face the difficulty to integrate more global concerns considering the underlying wicked problems of the design and use of such systems.&lt;/p&gt;
&lt;p&gt;Various disciplines use models for different purposes. Engineers, e.g., software engineers, use prescriptive models to represent the system to implement, and scientists, e.g., environmentalists, use descriptive models to represent the complexity of the world to understand and reason over it for analysis purpose. While the former tries to integrate all the properties in between the various engineering involved in the development process, the latter use models to internalize all the possible externalities of any changes, and later perform trade-off analysis. With the advent of smart CPS, the combination of descriptive and prescriptive models becomes essential, respectively for openly and freely involving massive open data, descriptive and predictive models in the decision process (either for trade-off analysis or dynamic adaptation purposes), and prescriptive models to support the smart design and reconfiguration process of modern CPS. It urges to provide the relevant facilities to software engineers for integrating into the future CPS the various models existing from the scientific community, and thus to support informed decisions, a broader engagement of the various stakeholders (e.g., scientists, decision makers and the general public), and dynamic adaptations with regards to the expected political impact of the smart CPS.&lt;/p&gt;
&lt;h2 id=&#34;objective&#34;&gt;Objective&lt;/h2&gt;
&lt;p&gt;Modeling environments (incl., Integrated Development Environments, seen as special cases for the so-called programming languages) take very different forms depending on the users, the modeling objectives, and the contexts in which the modeling activity fits. During the last decade these environments have evolved to integrate ever more advanced features, and offering the user abstractions and automation (e.g., code generation, V&amp;amp;V and DevOps). Generative approaches currently offer the means to automatically support modeling languages (i.e., Domain-Specific Language) with environments offering facilities for editing, analysis and debugging; all offering support for the implementation of an already well-designed system. However, we are lacking in facilities supporting the system design activity itself (tools to support thinking leading to an optimal design of a desired system). These socio-technical systems can be software, cyber-physical, or physical systems.&lt;/p&gt;
&lt;h2 id=&#34;description-of-the-work&#34;&gt;Description of the work&lt;/h2&gt;
&lt;p&gt;The research program aims to establish the required foundations to integrate not only prescriptive engineering models, but also data (from the systems or existing ones, measurements, user preferences, requirements, data from the surrounding environment, etc.), descriptive models of the environment (physical, but also environmental, economic and social), and predictive models to offer the recommendations and predictions required to assist the modeling activities.&lt;/p&gt;
&lt;p&gt;The main objectives are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the definition of &lt;strong&gt;a unified modeling framework&lt;/strong&gt; making it possible to integrate heterogeneous models, and to establish the relationships between them.&lt;/li&gt;
&lt;li&gt;the definition of &lt;strong&gt;a language engineering approach&lt;/strong&gt; allowing to design and integrate heterogeneous modeling languages, but also the associated modeling environments:
&lt;ul&gt;
&lt;li&gt;in connection with distributed computing to offer modular, distributed and collaborative environments&lt;/li&gt;
&lt;li&gt;in connection with programming languages to offer a sound combination of live programming, literate programming and exploratory programming.&lt;/li&gt;
&lt;li&gt;in connection with model reduction techniques, approximate computing, and statistical approaches to offer recommendation and prediction tools.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This program is grounded into the application domain of cyber-physical systems in order to offer design space exploration tools to design ground breaking products, and to finely monitor existing systems for predictive maintenance (e.g., digital twin). The program is also grounded in the domain of scientific computing, with the main objective to explore tools that ease the integration of heterogeneous scientific models, and the interaction with them (i.e., tools for tradeoff analysis and decision making through “what if” scenarios).&lt;/p&gt;
&lt;p&gt;The long term objective is to cross-fertilize the aforementioned application domains, with &lt;strong&gt;the overall objective to develop smarter cyber-physical systems in the future&lt;/strong&gt;. The candidates will leverage ongoing collaborations to investigate sustainability system, i.e., smart cyber-physical systems dedicated to sustain the production, transport and consumption of ressources. These systems include smart cities, farming, building, transportation and grids. The transition to more sustainable production, exploitation and consumption patterns requires technological, scientific and social breakthroughs. This transition must meet human needs while ensuring the preservation of natural resources. This requires communication between several disciplines of the environmental sciences, natural sciences and social sciences in the time scale to measure the degree of irreversibility of our current and future choices, but also in the spatial scale to determine the level of adaptation of the solutions envisaged in a given environment. On the one hand, this requires developing scientific knowledge and methods (eg, green chemistry, renewable energies) as well as socio-economic policies (eg, fiscal and redistribution policy) on our capacity for the sustainable use of our resources, but also in the adaptive capacity of ecosystems. On the other hand, it is necessary to determine the future evolution of needs and their conditions of access in order to prevent various forms of injustice, sources of conflicts and wars.&lt;/p&gt;
&lt;h2 id=&#34;environment&#34;&gt;Environment&lt;/h2&gt;
&lt;p&gt;The candidate will work at Inria in the DiverSE team. Inria is the French national institute for research in computer science. There are 8 Inria research centres located throughout France, hosting more than 200 research teams. The DiverSE team is located in Rennes. DiverSE’s research is in the area of software engineering. The team is actively involved in European, French and industrial projects and is composed of 9 faculty members, 20 PhD students, 2 post-docs and 4 engineers.
The main advisor of the PhD thesis will be Prof. Benoit Combemale (University of Rennes 1, DiverSE team).&lt;/p&gt;
&lt;h2 id=&#34;how-to-apply&#34;&gt;How to apply&lt;/h2&gt;
&lt;p&gt;Please send your application (PDF) as soon as possible. Screening of applications starts immediately and continues until the position is filled. Send a cover letter including names of at least two referees, CV, PDFs of publications (if any) to the main advisor.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.wsj.com/articles/SB10001424053111903480904576512250915629460&#34;&gt;https://www.wsj.com/articles/SB10001424053111903480904576512250915629460&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Benoit Combemale, Jörg Kienzle, Gunter Mussbacher, Hyacinth Ali, Daniel Amyot, et al.. A Hitchhiker&amp;rsquo;s Guide to Model-Driven Engineering for Data-Centric Systems. IEEE Software, Institute of Electrical and Electronics Engineers, 2020, pp.1-9. Preprint: &lt;a href=&#34;https://hal.inria.fr/hal-02612087&#34;&gt;https://hal.inria.fr/hal-02612087&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Gunter Mussbacher, Benoit Combemale, Jörg Kienzle, Silvia Abrahão, Hyacinth Ali, et al.. Opportunities in Intelligent Modeling Assistance. Software and Systems Modeling, Springer Verlag, 2020, pp.1-7. Preprint: &lt;a href=&#34;https://hal.inria.fr/hal-02876536&#34;&gt;https://hal.inria.fr/hal-02876536&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Postdoctoral position: A programming model for simulation processes</title>
      <link>https://people.irisa.fr/Benoit.Combemale/job/postdoc-simulationprocesses/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0200</pubDate>
      <guid>https://people.irisa.fr/Benoit.Combemale/job/postdoc-simulationprocesses/</guid>
      <description>&lt;h2 id=&#34;context&#34;&gt;Context&lt;/h2&gt;
&lt;p&gt;Scientific software is often designed in the form of a process including data preprocessing, simulation code, and data postprocessing.
In the current state of the practices, this process is either split in several modules put together in an explicit data-flow process,
or tightly coupled in a single program.
The data-flow processes tend to treat in a very decoupled way the processing of the data from the simulation, most often thanks to persistent data exchanges.
Although this approach allows a clear separation of concerns,
it imposes a strong sequentiality which prevent from reasoning on the simulation code (e.g., linters, optimizers, checkers) according to a given input data.
Conversely, strongly coupled approaches allow a very strong link between data processing and simulation, but do not support a clear separation of concerns,
and create a big chunk of code preventing the optimal deployment on heterogeneous execution platforms (e.g., GPGPU).
This leads to a complex code, without control over the expressiveness required in the different activities.
Moreover, none of the current approaches support scientists in the definition and optimization of the compilation chain of the simulation code.
In particular, this is very difficult for scientists to predict the performance of a simulation code (execution time, CPU and memory resources) according to a given input data.&lt;/p&gt;
&lt;h2 id=&#34;objective&#34;&gt;Objective&lt;/h2&gt;
&lt;p&gt;In this work, we will explore a new architecture for designing scientific processes based on explicit behavioral interfaces instead of structural data structure. Such an architecture will simplify the simulation code by avoiding all the conditionals regarding the initialization according to the input data, and will support:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the inference of the execution paths activated in the simulation code according to a given input data,&lt;/li&gt;
&lt;li&gt;the scientists in the testing activities based on the identified execution paths, as well as in the definition of the compilation chain partially automatically and partially with the support of linters that will predict quality of service (QoS) properties (e.g., execution time and CPU/memory consumption), and&lt;/li&gt;
&lt;li&gt;the optimization of the compilation chain with automatic inlining of initialization functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The post-doctoral researcher will conduct the following activities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Define an explicit behavioral interface between data processing and the simulation code, together with a composition operator to bring them together,&lt;/li&gt;
&lt;li&gt;Propose a combination of static and dynamic analysis of the simulation code to infer the execution paths according to a given input data, and&lt;/li&gt;
&lt;li&gt;Explore several services to support testing activities, and help in the definition and optimization of the compilation chain. In particular, a learning model will be established to propose linters that assist the scientists in predicting QoS properties on the simulation code according to a given input data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The work will be realized in the context of the NabLab language (&lt;a href=&#34;https://github.com/cea-hpc/NabLab),&#34;&gt;https://github.com/cea-hpc/NabLab),&lt;/a&gt; a domain-specific language (DSL) developed by CEA DAM for numerical analysis with high performance computing (HPC). The post-doctoral researcher will be part of the development team of the DSL, and will have the opportunity to experiment and involve the language accordingly. Scientific results will be published in high-quality conferences and journals from the fields of software engineering and scientific computing.&lt;/p&gt;
&lt;h2 id=&#34;environment&#34;&gt;Environment&lt;/h2&gt;
&lt;p&gt;The work will be supervised by the CEA DAM team in charge of the NabLab project
which aims at providing a full-fledged industrial environment for scientific computing and High-Performance Computing.
The work will take place at the TERATEC Campus located in the south of the Paris region, in the town of Bruyères-le-Châtel.
The campus houses major players in high performance simulation and computing.
The work will be also realized in collaboration with the DiverSE research team, joint to the CNRS (IRISA) and Inria.
The DiverSE team is located in Rennes, Brittany, France. DiverSE’s research is in the area of software engineering.
The team is actively involved in European, French and industrial projects and is composed of 9 faculty members, 20 PhD students, 4 post-docs and 3 engineers.
The candidate will work more specifically with 
&lt;a href=&#34;https://people.irisa.fr/Benoit.Combemale/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prof. Benoit Combemale&lt;/a&gt; (University of Rennes 1, DiverSE team) and 
&lt;a href=&#34;http://www.mathieuacher.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prof. Mathieu Acher&lt;/a&gt; (University of Rennes 1, DiverSE team).&lt;/p&gt;
&lt;h2 id=&#34;skills-and-background&#34;&gt;Skills and Background&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A PhD in the field of software engineering or language design and implementation, with a recognized research record&lt;/li&gt;
&lt;li&gt;Experience in software language engineering, in particular an experience with Xtext and EMF would be a plus&lt;/li&gt;
&lt;li&gt;Experience in the implementation of static and dynamic program analysis&lt;/li&gt;
&lt;li&gt;Autonomy, and the ability to work in a distributed and international group.&lt;/li&gt;
&lt;li&gt;Fluent in English&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
